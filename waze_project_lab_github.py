# -*- coding: utf-8 -*-
"""Waze project lab github.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1a5AcukgMdnUGrISJzbjEpjnjzrQ7zm3T

# **Waze Project**
**Course 2 - Get Started with Python**

Welcome to the Waze Project!

Your Waze data analytics team is still in the early stages of their user churn project. Previously, you were asked to complete a project proposal by your supervisor, May Santner. You have received notice that your project proposal has been approved and that your team has been given access to Waze's user data. To get clear insights, the user data must be inspected and prepared for the upcoming process of exploratory data analysis (EDA).

A Python notebook has been prepared to guide you through this project. Answer the questions and create an executive summary for the Waze data team.

### **Task 1. Understand the situation**

*   How can you best prepare to understand and organize the provided driver data?

==> ENTER YOUR RESPONSE HERE
  Begin by exploring the dataset and reviewing the Data Dictionary to understand the columns and what each row entry should be.

### **Task 2a. Imports and data loading**

Start by importing the packages that you will need to load and explore the dataset.
"""

# Import packages for data manipulation
### YOUR CODE HERE ###
import pandas as pd

import numpy as np

"""Then, load the dataset into a dataframe. Creating a dataframe will help you conduct data manipulation, exploratory data analysis (EDA), and statistical activities.

"""

# Load dataset into dataframe
df = pd.read_csv('waze_dataset.csv')

"""### **Task 2b. Summary information**

View and inspect summary information about the dataframe by **coding the following:**

1.   df.head(10)
2.   df.info()

*Consider the following questions:*

1. When reviewing the `df.head()` output, are there any variables that have missing values?

2. When reviewing the `df.info()` output, what are the data types? How many rows and columns do you have?

3. Does the dataset have any missing values?
"""

### YOUR CODE HERE ###
df.head(10)

### YOUR CODE HERE ###
df.info()

"""==> ENTER YOUR RESPONSES TO QUESTIONS 1-3 HERE

When reviewing the df.head() output, there are no missing values. Only some zero values
When reviewing the df.info() output, there are 8 columns with int datatype, 2 obj dtype, 3 float dtype. the data has 14999 rows and 13 columns.

the Label column seems to have some null/missing values (about 700)

### **Task 2c. Null values and summary statistics**

Compare the summary statistics of the 700 rows that are missing labels with summary statistics of the rows that are not missing any values.

**Question:** Is there a discernible difference between the two populations?
"""

# Isolate rows with null values
### YOUR CODE HERE ###
missing_values = df[df['label'].isnull()]
missing_values

# Display summary stats of rows with null values
### YOUR CODE HERE ###
missing_values.describe()

# Isolate rows without null values
### YOUR CODE HERE ###
not_missing_values = df[df['label'].notnull()]
not_missing_values
# Display summary stats of rows without null values
### YOUR CODE HERE ###
not_missing_values.describe()

"""==> ENTER YOUR RESPONSE HERE

Comparing summary statistics of the observations with missing retention labels with those that aren't missing any values reveals nothing remarkable. The means and standard deviations are fairly consistent between the two groups.

### **Task 2d. Null values - device counts**

Next, check the two populations with respect to the `device` variable.

**Question:** How many iPhone users had null values and how many Android users had null values?
"""

# Get count of null values by device
### YOUR CODE HERE ###
missing_values.groupby('device').count()[['ID']]
#also missing_values.['device'].value_counts()

"""==> ENTER YOUR RESPONSE HERE
Of the entries with missing values, 447 are iPhone users and 253 are android users

Now, of the rows with null values, calculate the percentage with each device&mdash;Android and iPhone. You can do this directly with the [`value_counts()`](https://pandas.pydata.org/docs/reference/api/pandas.Series.value_counts.html) function.
"""

# Calculate % of iPhone nulls and Android nulls
### YOUR CODE HERE ###
missing_values['device'].value_counts(normalize = True)

"""How does this compare to the device ratio in the full dataset?"""

# Calculate % of iPhone users and Android users in full dataset
### YOUR CODE HERE ###
df['device'].value_counts(normalize = True)

"""The percentage of missing values by each device is consistent with their representation in the data overall.

There is nothing to suggest a non-random cause of the missing data.

Examine the counts and percentages of users who churned vs. those who were retained. How many of each group are represented in the data?
"""

# Calculate counts of churned vs. retained
### YOUR CODE HERE ###
df['label'].value_counts(normalize = True)

"""This dataset contains 82% retained users and 18% churned users.

Next, compare the medians of each variable for churned and retained users. The reason for calculating the median and not the mean is that you don't want outliers to unduly affect the portrayal of a typical user. Notice, for example, that the maximum value in the `driven_km_drives` column is 21,183 km. That's more than half the circumference of the earth!
"""

# Calculate median values of all columns for churned and retained users
### YOUR CODE HERE ###
df.groupby('label').median()

"""This offers an interesting snapshot of the two groups, churned vs. retained:

Users who churned averaged ~3 more drives in the last month than retained users, but retained users used the app on over twice as many days as churned users in the same time period.

The median churned user drove ~200 more kilometers and 2.5 more hours during the last month than the median retained user.

It seems that churned users had more drives in fewer days, and their trips were farther and longer in duration. Perhaps this is suggestive of a user profile. Continue exploring!

Calculate the median kilometers per drive in the last month for both retained and churned users.
"""

# Add a column to df called `km_per_drive`
### YOUR CODE HERE ###
df['km_per_drive'] = df['driven_km_drives']/df['drives']
# Group by `label`, calculate the median, and isolate for km per drive
### YOUR CODE HERE ###
df.groupby('label').median()[['km_per_drive']]

"""The median retained user drove about one more kilometer per drive than the median churned user. How many kilometers per driving day was this?

"""

# Add a column to df called `km_per_driving_day`
### YOUR CODE HERE ###
df['km_per_driving_day'] = df['driven_km_drives']/df['driving_days']
# Group by `label`, calculate the median, and isolate for km per driving day
### YOUR CODE HERE ###
df.groupby('label').median()[['km_per_driving_day']]

"""Now, calculate the median number of drives per driving day for each group."""

# Add a column to df called `drives_per_driving_day`
### YOUR CODE HERE ###
df['drives_per_driving_day'] = df['drives']/df['driving_days']

# Group by `label`, calculate the median, and isolate for drives per driving day
### YOUR CODE HERE ###
df.groupby('label').median()[['drives_per_driving_day']]

"""The median user who churned drove 698 kilometers each day they drove last month, which is almost ~240% the per-drive-day distance of retained users. The median churned user had a similarly disproporionate number of drives per drive day compared to retained users.

It is clear from these figures that, regardless of whether a user churned or not, the users represented in this data are serious drivers! It would probably be safe to assume that this data does not represent typical drivers at large. Perhaps the data&mdash;and in particular the sample of churned users&mdash;contains a high proportion of long-haul truckers.

In consideration of how much these users drive, it would be worthwhile to recommend to Waze that they gather more data on these super-drivers. It's possible that the reason for their driving so much is also the reason why the Waze app does not meet their specific set of needs, which may differ from the needs of a more typical driver, such as a commuter.

Finally, examine whether there is an imbalance in how many users churned by device type.

Begin by getting the overall counts of each device type for each group, churned and retained.
"""

# For each label, calculate the number of Android users and iPhone users
### YOUR CODE HERE ###
df.groupby(['label', 'device']).count()[['ID']]

"""Now, within each group, churned and retained, calculate what percent was Android and what percent was iPhone."""

# For each label, calculate the percentage of Android users and iPhone users
### YOUR CODE HERE ###
df.groupby('label')['device'].value_counts(normalize=True)

"""The ratio of iPhone users and Android users is consistent between the churned group and the retained group, and those ratios are both consistent with the ratio found in the overall dataset.

### **Task 3. Conclusion**

Recall that your supervisor, May Santer, asked you to share your findings with the data team in an executive summary. Consider the following questions as you prepare to write your summary. Think about key points you may want to share with the team, and what information is most relevant to the user churn project.

**Questions:**

1. Did the data contain any missing values? How many, and which variables were affected? Was there a pattern to the missing data?
2. What is a benefit of using the median value of a sample instead of the mean?
3. Did your investigation give rise to further questions that you would like to explore or ask the Waze team about?
4. What percentage of the users in the dataset were Android users and what percentage were iPhone users?
5. What were some distinguishing characteristics of users who churned vs. users who were retained?
6. Was there an appreciable difference in churn rate between iPhone users vs. Android users?

==> ENTER YOUR RESPONSES TO QUESTIONS 1-6 HERE

**Questions:**

1. Did the data contain any missing values? How many, and which variables were affected? Was there a pattern to the missing data?
Yes it did. there were 700 missing values in the label column. There was no noticeable patterns

2. What is a benefit of using the median value of a sample instead of the mean?
The benefit is in order not to have a skewed view as some drives were extremely high values (can take as outliersin this case). the mean will misrepresent the data

3. Did your investigation give rise to further questions that you would like to explore or ask the Waze team about?
Yes, The type of vehicles the divers with those high values drives drove. Are they normalcommuters or long haul drives and were just one off.
For example, the median user who churned drove 698 kilometers each day they drove last month, which is about 240% the per-drive-day distance of retained users. It would be helpful to know how this data was collected and if it represents a non-random sample of users.

4. What percentage of the users in the dataset were Android users and what percentage were iPhone users?
64% used iPhone and 36% used androids

5. What were some distinguishing characteristics of users who churned vs. users who were retained?
Generally, users who churned drove farther and longer in fewer days than retained users. They also used the app about half as many times as retained users over the same period.

6. Was there an appreciable difference in churn rate between iPhone users vs. Android users?

No. The churn rate for both iPhone and Android users was within one percentage point of each other. There is nothing suggestive of churn being correlated with device.

**Congratulations!** You've completed this lab.
"""